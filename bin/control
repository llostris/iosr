#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH
source $OPENSHIFT_SPARK_DIR/bin/utils
source $OPENSHIFT_SPARK_DIR/bin/manifest_parser

echo $(getLogTimeStamp) "spark-cartridge control.sh - $1" >> $OPENSHIFT_SPARK_LOG

function start {
  echo $(getLogTimeStamp) "spark-cartridge: start" >> $OPENSHIFT_SPARK_LOG

  if [ $(isAppWithManifest) -eq 0 ]
  then
    client_message "Located manifest file, proceeding with cluster creation."
  
    parse_manifest

    client_message "Parsed manifest file successfully."
  
    # resolve cluster template id and other variables from manifest
    loadDataFromManifest

    # if cluster doesn't exist already - create it
    if [ -z "$OPENSHIFT_SPARK_CLUSTER_ID" ]
    then
      createCluster
    fi

    # if cluster was created successfully
    if [ -n "$OPENSHIFT_SPARK_CLUSTER_ID" ]
    then
      createJobBinaryInternal
      createJobBinary
      createJob
      executeJob
    fi
  else
    client_message "No manifest found, halting cluster creation."
  fi
}

function stop {
  echo $(getLogTimeStamp) "spark-cartridge: stop" >> $OPENSHIFT_SPARK_LOG

  # TODO: move to TIDY
  if [ -n "$OPENSHIFT_SPARK_JOB_EXECUTION_ID" ]
  then
    deleteJobExecution
  fi

  if [ -n "$OPENSHIFT_SPARK_JOB_ID" ]
  then
    deleteJob
  fi

  if [ -n "$OPENSHIFT_SPARK_JOB_BINARY_ID" ]
  then
    deleteJobBinary
  fi

  if [ -n "$OPENSHIFT_SPARK_JOB_BINARY_INTERNAL_ID" ] 
  then
    deleteJobBinaryInternal
  fi

  # if [ -n "$OPENSHIFT_SPARK_CLUSTER_ID" ]
  # then
  #   stopCluster
  # fi
}

function restart {
  echo $(getLogTimeStamp) "spark-cartridge: restart" >> $OPENSHIFT_SPARK_LOG
  stop
  start
}

function status {
  echo $(getLogTimeStamp) "spark-cartridge: status" >> $OPENSHIFT_SPARK_LOG
}

function reload {
  echo $(getLogTimeStamp) "spark-cartridge: reload" >> $OPENSHIFT_SPARK_LOG
  client_result "Reloading Spark Cartridge"
}

function tidy {
  echo $(getLogTimeStamp) "spark-cartridge: tidy" >> $OPENSHIFT_SPARK_LOG
}

function catchall {
    echo $(getLogTimeStamp) "spark-cartridge: not yet implemented" >> $OPENSHIFT_SPARK_LOG
}

case "$1" in
  start)       start ;;
  stop)        stop ;;
  restart)     restart ;;
  status)      status ;;
  reload)      reload ;;
  tidy)        tidy ;;
  pre-build)   catchall ;;
  build)       catchall ;;
  deploy)      catchall ;;
  post-deploy) catchall ;;
  *)           exit 0
esac

exit 0
